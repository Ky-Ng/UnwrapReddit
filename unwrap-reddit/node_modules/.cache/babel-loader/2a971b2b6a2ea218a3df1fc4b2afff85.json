{"remainingRequest":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/babel-loader/lib/index.js!/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/eslint-loader/index.js??ref--14-0!/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/src/parsers/parser.js","dependencies":[{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/src/parsers/parser.js","mtime":1667174449503},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/babel.config.js","mtime":1667174449490},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQW5hbHl0aWNzIH0gZnJvbSAiQC9wYXJzZXJzL2FuYWx5dGljcyI7CmNvbnN0IHNub293cmFwID0gcmVxdWlyZSgnc25vb3dyYXAnKTsKbGV0IHJlZGRpdFBvc3RzID0gW107CmxldCBpc1ZhbGlkUmVxID0gbnVsbDsKLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCmxldCBpc0J1c3kgPSBudWxsOwpjb25zdCBhcGlQYXJzZXIgPSBuZXcgc25vb3dyYXAoewogIHVzZXJBZ2VudDogJ1Vud3JhcCBSZWRkaXQgQVBJIFBhcnNlci0gS3lsZSBOZycsCiAgY2xpZW50SWQ6ICdxV2hmSDNrMzFfanI2YXdoRWIzVFNRJywKICBjbGllbnRTZWNyZXQ6ICdhQ3NxNW1FLW5tdW9yR1J5QkdXWXdBZTl5THJwVXcnLAogIHVzZXJuYW1lOiAndW53cmFwcmVkZGl0JywKICBwYXNzd29yZDogJ3JlZGRpdHBhc3MnCiAgLy8gcmVmcmVzaFRva2VuOiAncHV0IHlvdXIgcmVmcmVzaCB0b2tlbiBoZXJlJwp9KTsKCmFzeW5jIGZ1bmN0aW9uIGZldGNoU3ViUmVkZGl0UG9zdHMoc3ViUmVkZGl0TmFtZSkgewogIC8vIHRvZG8gaW5jcmVhc2UgdGhlIG51bWJlciBvZiBwb3N0cyB0byA1MDAKICByZWRkaXRQb3N0cyA9IGF3YWl0IGFwaVBhcnNlci5nZXRUb3Aoc3ViUmVkZGl0TmFtZSwgewogICAgdGltZTogInllYXIiLAogICAgbGltaXQ6IDUwMAogIH0pOwogIC8vIHJlZGRpdFBvc3RzID0gYXdhaXQgYXBpUGFyc2VyLmdldEhvdChzdWJSZWRkaXROYW1lLCB7IGxpbWl0OiAxMH0pOwp9CgovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKYXN5bmMgZnVuY3Rpb24gc2FmZUZldGNoU3ViUmVkZGl0UG9zdHMoc3ViUmVkZGl0TmFtZSkgewogIC8vIFJlZm9ybWF0IHN1YlJlZGRpdE5hbWU6IGNhbm5vdCBoYXZlIHdoaXRlc3BhY2VzIG9yIHN0YXJ0IHdpdGggci8KICBzdWJSZWRkaXROYW1lID0gc3ViUmVkZGl0TmFtZS5yZXBsYWNlKC9ccy9nLCAiIik7CiAgc3ViUmVkZGl0TmFtZSA9IHN1YlJlZGRpdE5hbWUucmVwbGFjZSgici8iLCAiIik7CiAgYXdhaXQgaXNWYWxpZFN1YnJlZGRpdChzdWJSZWRkaXROYW1lKTsKICBpZiAoaXNWYWxpZFJlcSkgewogICAgYXdhaXQgZmV0Y2hTdWJSZWRkaXRQb3N0cyhzdWJSZWRkaXROYW1lKTsKICAgIC8vIGxldCBBbmFseXplcjsKICAgIEFuYWx5dGljcy5mZXRjaERhdGEocmVkZGl0UG9zdHMpOwogIH0KICBpc0J1c3kgPSBmYWxzZTsKfQphc3luYyBmdW5jdGlvbiBpc1ZhbGlkU3VicmVkZGl0KHN1YlJlZGRpdE5hbWUpIHsKICBpZiAoc3ViUmVkZGl0TmFtZSA9PSBudWxsKSBpc1ZhbGlkUmVxID0gZmFsc2U7CiAgaXNCdXN5ID0gdHJ1ZTsKCiAgLy8gUmVmb3JtYXQgc3ViUmVkZGl0TmFtZTogY2Fubm90IGhhdmUgd2hpdGVzcGFjZXMgb3Igc3RhcnQgd2l0aCByLwogIHN1YlJlZGRpdE5hbWUgPSBzdWJSZWRkaXROYW1lLnJlcGxhY2UoL1xzL2csICIiKTsKICBzdWJSZWRkaXROYW1lID0gc3ViUmVkZGl0TmFtZS5yZXBsYWNlKCJyLyIsICIiKTsKICBhd2FpdCBhcGlQYXJzZXIuZ2V0VG9wKHN1YlJlZGRpdE5hbWUsIHsKICAgIHRpbWU6ICJ5ZWFyIiwKICAgIGxpbWl0OiAxCiAgfSkudGhlbih2YWxpZFBvc3QgPT4gewogICAgY29uc29sZS5sb2coIlZhbGlkIFBvc3QgIiArIHZhbGlkUG9zdCk7CiAgICBpc1ZhbGlkUmVxID0gdHJ1ZTsKICB9KS5jYXRjaChpbnZhbGlkUG9zdEVycm9yID0+IHsKICAgIGNvbnNvbGUubG9nKCJJbnZhbGlkIFBvc3QgIiArIGludmFsaWRQb3N0RXJyb3IpOyAvL3RvZG8gcmVtb3ZlCiAgICBpc1ZhbGlkUmVxID0gZmFsc2U7CiAgfSk7Cn0KZnVuY3Rpb24gcHJpbnRQb3N0VGl0bGUoKSB7CiAgcmVkZGl0UG9zdHMuZm9yRWFjaChwb3N0ID0+IHsKICAgIGNvbnNvbGUubG9nKHBvc3QudGl0bGUpOwogIH0pOwp9CmZ1bmN0aW9uIHByaW50UG9zdCgpIHsKICByZWRkaXRQb3N0cy5mb3JFYWNoKHBvc3QgPT4gewogICAgY29uc29sZS5sb2cocG9zdCk7CiAgfSk7Cn0KZnVuY3Rpb24gZ2V0SXNWYWxpZFN1YlJlZGRpdCgpIHsKICByZXR1cm4gaXNWYWxpZFJlcTsKfQpleHBvcnQgeyBwcmludFBvc3RUaXRsZSwgZ2V0SXNWYWxpZFN1YlJlZGRpdCwgaXNWYWxpZFN1YnJlZGRpdCwgc2FmZUZldGNoU3ViUmVkZGl0UG9zdHMsIHByaW50UG9zdCB9Ow=="},{"version":3,"names":["Analytics","snoowrap","require","redditPosts","isValidReq","isBusy","apiParser","userAgent","clientId","clientSecret","username","password","fetchSubRedditPosts","subRedditName","getTop","time","limit","safeFetchSubRedditPosts","replace","isValidSubreddit","fetchData","then","validPost","console","log","catch","invalidPostError","printPostTitle","forEach","post","title","printPost","getIsValidSubReddit"],"sources":["/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/src/parsers/parser.js"],"sourcesContent":["import {Analytics} from \"@/parsers/analytics\";\n\nconst snoowrap = require('snoowrap');\n\nlet redditPosts = [];\nlet isValidReq = null;\n// eslint-disable-next-line no-unused-vars\nlet isBusy = null;\n\nconst apiParser = new snoowrap({\n    userAgent: 'Unwrap Reddit API Parser- Kyle Ng',\n    clientId: 'qWhfH3k31_jr6awhEb3TSQ',\n    clientSecret: 'aCsq5mE-nmuorGRyBGWYwAe9yLrpUw',\n    username: 'unwrapreddit',\n    password: 'redditpass'\n    // refreshToken: 'put your refresh token here'\n});\n\nasync function fetchSubRedditPosts(subRedditName) {\n    // todo increase the number of posts to 500\n    redditPosts = await apiParser.getTop(subRedditName, {time: \"year\", limit: 500});\n    // redditPosts = await apiParser.getHot(subRedditName, { limit: 10});\n}\n\n\n// eslint-disable-next-line no-unused-vars\nasync function safeFetchSubRedditPosts(subRedditName) {\n    // Reformat subRedditName: cannot have whitespaces or start with r/\n    subRedditName = subRedditName.replace(/\\s/g, \"\");\n    subRedditName = subRedditName.replace(\"r/\", \"\");\n\n    await isValidSubreddit(subRedditName);\n    if (isValidReq) {\n        await fetchSubRedditPosts(subRedditName);\n        // let Analyzer;\n        Analytics.fetchData(redditPosts);\n    }\n    isBusy = false;\n}\n\nasync function isValidSubreddit(subRedditName) {\n    if (subRedditName == null) isValidReq = false;\n    isBusy = true;\n\n    // Reformat subRedditName: cannot have whitespaces or start with r/\n    subRedditName = subRedditName.replace(/\\s/g, \"\");\n    subRedditName = subRedditName.replace(\"r/\", \"\");\n\n    await apiParser.getTop(subRedditName, {time: \"year\", limit: 1})\n        .then((validPost) => {\n            console.log(\"Valid Post \" + validPost);\n            isValidReq = true;\n        })\n        .catch((invalidPostError) => {\n            console.log(\"Invalid Post \" + invalidPostError); //todo remove\n            isValidReq = false;\n        });\n}\n\nfunction printPostTitle() {\n    redditPosts.forEach(post => {\n        console.log(post.title)\n    });\n}\n\nfunction printPost(){\n    redditPosts.forEach(post => {\n        console.log(post)\n    });\n}\n\nfunction getIsValidSubReddit(){\n    return isValidReq;\n}\n\n\nexport {printPostTitle, getIsValidSubReddit, isValidSubreddit, safeFetchSubRedditPosts, printPost}\n"],"mappings":"AAAA,SAAQA,SAAS,QAAO,qBAAqB;AAE7C,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,IAAIC,WAAW,GAAG,EAAE;AACpB,IAAIC,UAAU,GAAG,IAAI;AACrB;AACA,IAAIC,MAAM,GAAG,IAAI;AAEjB,MAAMC,SAAS,GAAG,IAAIL,QAAQ,CAAC;EAC3BM,SAAS,EAAE,mCAAmC;EAC9CC,QAAQ,EAAE,wBAAwB;EAClCC,YAAY,EAAE,gCAAgC;EAC9CC,QAAQ,EAAE,cAAc;EACxBC,QAAQ,EAAE;EACV;AACJ,CAAC,CAAC;;AAEF,eAAeC,mBAAmB,CAACC,aAAa,EAAE;EAC9C;EACAV,WAAW,GAAG,MAAMG,SAAS,CAACQ,MAAM,CAACD,aAAa,EAAE;IAACE,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC/E;AACJ;;AAGA;AACA,eAAeC,uBAAuB,CAACJ,aAAa,EAAE;EAClD;EACAA,aAAa,GAAGA,aAAa,CAACK,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAChDL,aAAa,GAAGA,aAAa,CAACK,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAE/C,MAAMC,gBAAgB,CAACN,aAAa,CAAC;EACrC,IAAIT,UAAU,EAAE;IACZ,MAAMQ,mBAAmB,CAACC,aAAa,CAAC;IACxC;IACAb,SAAS,CAACoB,SAAS,CAACjB,WAAW,CAAC;EACpC;EACAE,MAAM,GAAG,KAAK;AAClB;AAEA,eAAec,gBAAgB,CAACN,aAAa,EAAE;EAC3C,IAAIA,aAAa,IAAI,IAAI,EAAET,UAAU,GAAG,KAAK;EAC7CC,MAAM,GAAG,IAAI;;EAEb;EACAQ,aAAa,GAAGA,aAAa,CAACK,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAChDL,aAAa,GAAGA,aAAa,CAACK,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAE/C,MAAMZ,SAAS,CAACQ,MAAM,CAACD,aAAa,EAAE;IAACE,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAC,CAAC,CAAC,CAC1DK,IAAI,CAAEC,SAAS,IAAK;IACjBC,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGF,SAAS,CAAC;IACtClB,UAAU,GAAG,IAAI;EACrB,CAAC,CAAC,CACDqB,KAAK,CAAEC,gBAAgB,IAAK;IACzBH,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGE,gBAAgB,CAAC,CAAC,CAAC;IACjDtB,UAAU,GAAG,KAAK;EACtB,CAAC,CAAC;AACV;AAEA,SAASuB,cAAc,GAAG;EACtBxB,WAAW,CAACyB,OAAO,CAACC,IAAI,IAAI;IACxBN,OAAO,CAACC,GAAG,CAACK,IAAI,CAACC,KAAK,CAAC;EAC3B,CAAC,CAAC;AACN;AAEA,SAASC,SAAS,GAAE;EAChB5B,WAAW,CAACyB,OAAO,CAACC,IAAI,IAAI;IACxBN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;EACrB,CAAC,CAAC;AACN;AAEA,SAASG,mBAAmB,GAAE;EAC1B,OAAO5B,UAAU;AACrB;AAGA,SAAQuB,cAAc,EAAEK,mBAAmB,EAAEb,gBAAgB,EAAEF,uBAAuB,EAAEc,SAAS"}]}