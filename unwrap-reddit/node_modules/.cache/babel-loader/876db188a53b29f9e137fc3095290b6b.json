{"remainingRequest":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/babel-loader/lib/index.js!/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/src/components/Search.vue","mtime":1667019245987},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/babel.config.js","mtime":1666819948065},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB7IGdldElzVmFsaWRTdWJSZWRkaXQsIGlzVmFsaWRTdWJyZWRkaXQgfSBmcm9tICJAL3BhcnNlcnMvcGFyc2VyIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTZWFyY2giLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkaXNhYmxlU2VhcmNoOiBmYWxzZSwKICAgICAgaXRlbXM6IFtdLAogICAgICBzZWFyY2g6IG51bGwsCiAgICAgIHNlbGVjdDogbnVsbCwKICAgICAgc3VicmVkZGl0VGl0bGVzOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBhc3luYyBzZWFyY2godmFsKSB7CiAgICAgIHZhbCAmJiB2YWwgIT09IHRoaXMuc2VsZWN0ICYmIHRoaXMucXVlcnlTZWxlY3Rpb25zKHZhbCk7CiAgICAgIC8vIEFkZCBhbnkgdmFsaWQgdHlwZWQgcmVkZGl0IHBvc3RzIHRvIHRoZSBsaXN0LCBlbnN1cmVzIHRoYXQgcHVzaFNlbGVjdFN1YlJlZGRpdFRpdGxlIG9ubHkgZmV0Y2hlcyB2YWxpZCBzdWJyZWRkaXRzCiAgICAgIGF3YWl0IGlzVmFsaWRTdWJyZWRkaXQodmFsKTsKICAgICAgaWYgKGdldElzVmFsaWRTdWJSZWRkaXQoKSkgewogICAgICAgIHRoaXMuc3VicmVkZGl0VGl0bGVzLnB1c2godmFsKTsKICAgICAgfQogICAgfSwKICAgIC8vIGFmdGVyIHRoZSB1c2VyIHNlbGVjdHMgYSB2YWxpZCBzdWJSZWRkaXQgZnJvbSB0aGUgYXV0b2NvbXBsZXRlCiAgICBzZWxlY3QoKSB7CiAgICAgIHRoaXMucHVzaFNlbGVjdFN1YlJlZGRpdFRpdGxlKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBxdWVyeVNlbGVjdGlvbnModikgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAvLyBTaW11bGF0ZWQgYWpheCBxdWVyeQogICAgICB0aGlzLml0ZW1zID0gdGhpcy5zdWJyZWRkaXRUaXRsZXM7CiAgICAgIGNvbnNvbGUubG9nKCJzZWFyY2ggdmFsdWUgaXMgIiArIHYpOwogICAgfSwKICAgIGFzeW5jIHB1c2hTZWxlY3RTdWJSZWRkaXRUaXRsZSgpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlLXN1YnJlZGRpdCcsIHRoaXMuc2VsZWN0KTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";AA2BA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IAEA;EACA;EACAC;IACA;MACAC;MACA;MACA;MACA;QACA;MACA;IACA;IAEA;IACAH;MACA;IACA;EACA;EACAI;IACAC;MACA;MACA;MACA;MACAC;IACA;IAEA;MACA;IACA;EACA;AACA","names":["name","data","disableSearch","items","search","select","subredditTitles","watch","val","methods","querySelections","console"],"sourceRoot":"src/components","sources":["Search.vue"],"sourcesContent":["<template>\n  <v-toolbar\n      dark\n      color=\"orange darken-2\"\n      flat\n      class=\"mr-3\"\n      rounded\n  >\n    <v-autocomplete\n        prepend-icon=\"mdi-magnify\"\n        v-model=\"select\"\n        :items=\"items\"\n        :search-input.sync=\"search\"\n        cache-items\n        class=\"mx-4\"\n        hide-no-data\n        hide-details\n        label=\"r/dogs\"\n        :disabled=disableSearch\n        rounded\n        solo-inverted\n        color=\"white\"\n    ></v-autocomplete>\n  </v-toolbar>\n</template>\n\n<script>\nimport {getIsValidSubReddit, isValidSubreddit} from \"@/parsers/parser\";\n\nexport default {\n  name: \"Search\",\n  data() {\n    return {\n      disableSearch: false,\n      items: [],\n      search: null,\n      select: null,\n      subredditTitles: [\n      ],\n    }\n  },\n  watch: {\n    async search(val) {\n      val && val !== this.select && this.querySelections(val)\n      // Add any valid typed reddit posts to the list, ensures that pushSelectSubRedditTitle only fetches valid subreddits\n      await isValidSubreddit(val)\n      if (getIsValidSubReddit()) {\n        this.subredditTitles.push(val)\n      }\n    },\n\n    // after the user selects a valid subReddit from the autocomplete\n    select() {\n      this.pushSelectSubRedditTitle()\n    }\n  },\n  methods: {\n    querySelections(v) {\n      this.loading = true\n      // Simulated ajax query\n      this.items = this.subredditTitles\n      console.log(\"search value is \" + v);\n    },\n\n    async pushSelectSubRedditTitle() {\n      this.$emit('update-subreddit', this.select);\n    }\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}