{"remainingRequest":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/src/views/Dashboard.vue","mtime":1667174449504},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kyleng/A School/Summer 2023/Unwrap/Code/unwrap-reddit/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBTZWFyY2ggZnJvbSAiQC9jb21wb25lbnRzL3VzZXJfaW5wdXQvU2VhcmNoIjsKaW1wb3J0IHtzYWZlRmV0Y2hTdWJSZWRkaXRQb3N0c30gZnJvbSAiQC9wYXJzZXJzL3BhcnNlciI7CmltcG9ydCBMb2FkZXIgZnJvbSAiQC9jb21wb25lbnRzL3VzZXJfaW5wdXQvTG9hZGVyIjsKaW1wb3J0IHtBbmFseXRpY3N9IGZyb20gIkAvcGFyc2Vycy9hbmFseXRpY3MiOwppbXBvcnQgU3ViUmVkZGl0VGl0bGUgZnJvbSAiQC9jb21wb25lbnRzL3VzZXJfaW5wdXQvU3ViUmVkZGl0VGl0bGUiOwppbXBvcnQgRGF0YURpc3BsYXkgZnJvbSAiQC9jb21wb25lbnRzL0RhdGFEaXNwbGF5L0RhdGFEaXNwbGF5IjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGFzaGJvYXJkIiwKICBjb21wb25lbnRzOiB7CiAgICBTZWFyY2gsCiAgICBMb2FkZXIsCiAgICBTdWJSZWRkaXRUaXRsZSwKICAgIERhdGFEaXNwbGF5LAogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIHJlbmRlcmVkSW46IGZhbHNlLAogICAgc3ViUmVkTmFtZTogImRvZ3MiLAogICAgc3ViUmVkZGl0QW5hbHl0aWNzOiBudWxsLAogICAgZ3JhcGhEYXRhOiBudWxsLAogIH0pLAoKICBtZXRob2RzOiB7CiAgICBhc3luYyBvblJlZGRpdFVwZGF0ZShzdWJSZWRkaXROYW1lKSB7CiAgICAgIHRoaXMucmVuZGVyZWRJbiA9IGZhbHNlOwogICAgICBhd2FpdCBzYWZlRmV0Y2hTdWJSZWRkaXRQb3N0cyhzdWJSZWRkaXROYW1lKTsKICAgICAgdGhpcy5yZW5kZXJlZEluID0gdHJ1ZTsKICAgICAgdGhpcy5zdWJSZWRkaXRBbmFseXRpY3MgPSBBbmFseXRpY3MuZ2V0QW5hbHl0aWNzKCk7CiAgICAgIHRoaXMuc3ViUmVkTmFtZSA9IHN1YlJlZGRpdE5hbWU7CiAgICB9CiAgfSwKCiAgYXN5bmMgYmVmb3JlTW91bnQoKSB7CiAgICAvLyBsb2FkIGluIGRvZ3Mgb3MgZGVmYXVsdAogICAgYXdhaXQgc2FmZUZldGNoU3ViUmVkZGl0UG9zdHMoImRvZ3MiKTsKICAgIHRoaXMucmVuZGVyZWRJbiA9IHRydWU7CiAgICB0aGlzLnN1YlJlZGRpdEFuYWx5dGljcyA9IEFuYWx5dGljcy5nZXRBbmFseXRpY3MoKTsKICB9LAp9Cg=="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";AAkBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-main class=\"ps-1 pb-2 mt-1\">\n\n    <div v-if=\"renderedIn\">\n      <v-row class=\"mx-1 pt-3\"><Search @update-subreddit=\"onRedditUpdate($event)\"></Search></v-row>\n\n      <SubRedditTitle :sub-reddit-name=\"subRedName\" class=\"pt-1 pb-0\"></SubRedditTitle>\n\n      <DataDisplay :subRedditAnalytics=\"subRedditAnalytics\"></DataDisplay>\n    </div>\n\n    <div v-else>\n      <Loader :show=\"true\"></Loader>\n    </div>\n  </v-main>\n</template>\n\n<script>\nimport Search from \"@/components/user_input/Search\";\nimport {safeFetchSubRedditPosts} from \"@/parsers/parser\";\nimport Loader from \"@/components/user_input/Loader\";\nimport {Analytics} from \"@/parsers/analytics\";\nimport SubRedditTitle from \"@/components/user_input/SubRedditTitle\";\nimport DataDisplay from \"@/components/DataDisplay/DataDisplay\";\n\nexport default {\n  name: \"Dashboard\",\n  components: {\n    Search,\n    Loader,\n    SubRedditTitle,\n    DataDisplay,\n  },\n  data: () => ({\n    renderedIn: false,\n    subRedName: \"dogs\",\n    subRedditAnalytics: null,\n    graphData: null,\n  }),\n\n  methods: {\n    async onRedditUpdate(subRedditName) {\n      this.renderedIn = false;\n      await safeFetchSubRedditPosts(subRedditName);\n      this.renderedIn = true;\n      this.subRedditAnalytics = Analytics.getAnalytics();\n      this.subRedName = subRedditName;\n    }\n  },\n\n  async beforeMount() {\n    // load in dogs os default\n    await safeFetchSubRedditPosts(\"dogs\");\n    this.renderedIn = true;\n    this.subRedditAnalytics = Analytics.getAnalytics();\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}